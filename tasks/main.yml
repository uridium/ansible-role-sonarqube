---
- name: Create SonarQube base directory
  file:
    path: '{{ sonarqube_basedir }}'
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create SonarQube group
  group:
    name: '{{ sonarqube_group }}'

- name: Create SonarQube user
  user:
    name: '{{ sonarqube_user }}'
    group: '{{ sonarqube_group }}'
    home: '{{ sonarqube_workdir }}'
    createhome: no
    shell: /usr/sbin/nologin

- name: Install requirements
  apt:
    name: '{{ item }}'
    state: present
    update_cache: yes
  with_items:
    - openjdk-11-jre-headless
    - unzip

- name: Unzip SonarQube
  unarchive:
    src: '{{ sonarqube_download_url }}'
    dest: '{{ sonarqube_basedir }}'
    remote_src: yes
    owner: '{{ sonarqube_user }}'
    group: '{{ sonarqube_group }}'
    creates: '{{ sonarqube_workdir }}-{{ sonarqube_version }}'

- name: Create symlink to SonarQube working directory
  file:
    src: '{{ sonarqube_workdir }}-{{ sonarqube_version }}'
    dest: '{{ sonarqube_workdir }}'
    state: link

- name: Configure sysctl
  sysctl:
    name: '{{ item.name }}'
    value: '{{ item.value }}'
    sysctl_file: /etc/sysctl.d/sonarqube.conf
    reload: yes
  with_items:
    - { name: 'vm.max_map_count', value: '{{ sonarqube_vm_max_map_count }}' }
    - { name: 'fs.file-max', value: '{{ sonarqube_fs_file_max }}' }

- name: Configure systemd
  template:
    src: sonarqube.service.j2
    dest: /etc/systemd/system/sonarqube.service
    mode: '0644'
  when: 'ansible_service_mgr == "systemd"'

- name: Configure SonarQube
  lineinfile:
    path: '{{ sonarqube_workdir }}/conf/sonar.properties'
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  no_log: True
  with_items:
    - regexp: '^sonar.jdbc.username='
      line: 'sonar.jdbc.username={{ db_user }}'
    - regexp: '^sonar.jdbc.password='
      line: 'sonar.jdbc.password={{ db_pass }}'
    - regexp: '^sonar.jdbc.url=jdbc:postgresql'
      line: 'sonar.jdbc.url=jdbc:postgresql://{{ db_host }}/{{ db_name }}'
    - regexp: '^sonar.web.javaOpts='
      line: 'sonar.web.javaOpts={{ sonarqube_web_java }}'
    - regexp: '^sonar.ce.javaOpts='
      line: 'sonar.ce.javaOpts={{ sonarqube_ce_java }}'
    - regexp: '^sonar.search.javaOpts='
      line: 'sonar.search.javaOpts={{ sonarqube_search_java }}'
  register: properties_conf

- name: Restart SonarQube
  systemd:
    name: sonarqube
    state: restarted
    enabled: yes
  when: properties_conf.changed

- name: Wait for SonarQube to start
  wait_for:
    port: 9000
    delay: 5
    timeout: 300
